Hexen II for DOS, version 1.5.10

DOS port of Hexen II, using the Hammer of Thyrion (uHexen2) engine
http://uhexen2.sourceforge.net/
http://sourceforge.net/projects/uhexen2/

  h2dos.exe:    Hexen II main game.
  h2patch.exe:  Patch program to upgrade Hexen II game pak files to the
                latest 1.11 version of Raven Software.
  h2ded.exe:    Hexen II dedicated server application.

  hwcl.exe:     HexenWorld client.
  hwsv.exe:     HexenWorld server.

  glh2dos.exe:  Hexen II main game, OpenGL (3Dfx) version.
  glhwcl.exe:   HexenWorld client,  OpenGL (3Dfx) version.


Things that don't work:

* MIDI music:  Not implemented yet.

Things that just work:

* All other functionality in uhexen2 just works under DOS, including
  Ogg/Vorbis and MP3 music playback.

Things not tested, but should work:

* NETWORKING:  Neither of modem or direct connection is tested.
  The code is almost exactly the same as the quake dos network code,
  therefore they should work the same way they do with dos-quake.
  On the other hand, IPX has been reported to work fine.

  In addition, uHexen2 includes WatTCP (WATT-32) support for internet
  play, which has been reported to work without issues.  See WatTCP
  documentation at http://www.watt-32.net for help in configuring it.
  Notes:
  - WatTCP won't initialize if IPX is running.
  - WatTCP was observed not to work properly with H2DOS as a dedicated
    or listen server, i.e. clients can't connect to it.
  - H2DED (the Hexen II dedicated server application) is not tested.

  In case you want to disable some or all network functionality, here
  are the related command line switches:
  -noupd : disables UDP (TCP/IP)
  -noipx : disables IPX
  -noserial: disables serial networking (modem / direct connection)
  -nolan : disables all networking.

* JOYSTICK:  The code is the same as quake joystick code, therefore
  it should work the same way it does with dos-quake. Note: In order
  to disable joystick, use the command line argument -nojoy.

* 3Dfx / OpenGL:  OpenGL rendering is supported on 3Dfx Voodoo cards.
  - Pick the correct Glide driver (glide3x.dxe) for your 3dfx card
    from the 3dfx\voodoo directory and copy it to your main hexen2
    directory.
  - The default gl driver (gl.dxe) in your main hexen2 directory is
    based on Mesa-3.4.x and is most compatible. If you want, replace
    it with a different driver from the 3dfx directory.
  Now glh2dos should run using your 3dfx accelerator card.


NOTES:

* THE GAME DATA:  Copy the two files named pak0.pak and pak1.pak from
  your original cdrom into the data1 directory.  If you have the
  mission pack, copy the file named pak3.pak from the cdrom into the
  portals directory.  Alternatively, you can copy over the pak files
  them from an existing windows intallation.  In any case, the pak
  files must be patched to the Raven's latest 1.11 version:  Just run
  the included H2PATCH program and it will be done.

* MEMORY:  The default amount of required memory is 32 MB.  You need
  at least 24 MB of RAM, otherwise you might experience crashes.  If
  you want to specify the amount of memory to use, run the game like
  this:

    h2dos -mem 16

  - Note: Higher video resolutions will be disabled when sufficient
    amount of memory is not present.

* CWSDPMI: Packaged with h2dos is CWSDPMI r7, which is the latest as
  of this writing. If you ever have problems with it, try switching
  to CWSDPMI r5/2008 refresh (see under the DPMI subdirectory in the
  hexen2dos package.)

* MOUSE: The driver that came with your mouse must be running.  In
  order to disable mouse, use the command line argument -nomouse.
  "CuteMouse" is recommended as a DOS mouse driver. CuteMouse official
  homepage is at  http://cutemouse.sourceforge.net/ , you can also
  check here:
  http://www.ibiblio.org/pub/micro/pc-stuff/freedos/files/dos/mouse/

* MOUSE WHEEL:  If you use the latest beta version of cutemouse, which
  is 2.1b3 (ctmouse21b3.zip), the wheel should work nicely. We tested
  with the 2.0-alpha and 2.1-beta versions. We automatically detect and
  use the wheel if it is present. To disable the wheel, use the command
  line argument -nowheel.

  - Note: As of cutemouse-2.1-beta4 version (cutemouse21b4.zip), the
    wheel is not enabled by default: you must use their /O switch.

* SOUND:  You must install the DOS drivers for your sound card.  For
  sound blaster emulation, the BLASTER environment variable must be set.
  In order to disable sound, use the command line argument -nosound.

* PCI SOUND CARDS: There is EXPERIMENTAL support for several PCI sound
  cards such as AC97, VIA, CMedia, ES1371, Intel HDA, etc.  You must run
  the game with -sndpci command line switch in order to activate it.
  Tested with CMedia and SB PCI (ES1371). Seemed to work best at 44100
  and 48000 sampling rates (e.g. run with -sndspeed 48000 )

* CDAUDIO:  The cdrom device driver (cdrom.sys, etc.) must be loaded,
  and mscdex 2.0 or compatible (such as shsucdx) must be running.
  If you have more than one cdrom drives, use the -cddev command line
  switch with a single drive letter as the argument, like:

        h2dos -cddev e

  Without the -cddev switch, the game will access the first cdrom drive.
  To disable cdaudio, use the command line argument -nocd or -nocdaudio.

* DEBUG LOG:  If something goes wrong, or if you are just curious, run
  the game using the command line argument -devlog, like:

        h2dos -devlog <other things..>

  With this switch, all and every messages from the game engine will be
  written into the file named debug_h2.log. It may contain clues about
  any problems you may have encountered.
